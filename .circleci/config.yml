version: 2

references:
  fast_checkout: &fast_checkout
    attach_workspace:
      at: '.'

jobs:
  persist_checkout:
    docker:
      - image: circleci/node:10
    steps:
      - restore_cache:
          keys:
            - repo-source-{{ .Branch }}-{{ .Revision }}
            - repo-source-{{ .Branch }}-
            - repo-source-
      - checkout
      - run: git gc # Built-in checkout disables garbage collection - https://circleci.com/docs/2.0/caching/
      - save_cache:
          key: repo-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - '.git'
      - persist_to_workspace:
          root: '.'
          paths:
            - '.'

  workspace_a_build:
    docker:
      - image: circleci/node:10
    steps:
      - *fast_checkout
      - run: deploy/maybe-build-and-test.sh workspace-a

  workspace_b_build:
    docker:
      - image: circleci/node:10
    steps:
      - *fast_checkout
      - run: deploy/maybe-build-and-test.sh workspace-b

  workspace_c_build:
    docker:
      - image: circleci/node:10
    steps:
      - *fast_checkout
      - run: deploy/maybe-build-and-test.sh workspace-c

  workspace_a_deploy:
    docker:
      - image: circleci/node:10
    steps:
      - run: echo deploying

  workspace_b_deploy:
    docker:
      - image: circleci/node:10
    steps:
      - run: echo deploying

  workspace_c_deploy:
    docker:
      - image: circleci/node:10
    steps:
      - run: echo deploying

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - persist_checkout
      - workspace_a_build:
          requires:
            - persist_checkout
      - workspace_a_deploy:
          requires:
            - workspace_a_build
      - workspace_b_build:
          requires:
            - persist_checkout
      - workspace_b_deploy:
          requires:
            - workspace_b_build
      - workspace_c_build:
          requires:
            - persist_checkout
      - workspace_c_hold:
          requires:
            - workspace_c_build
          type: approval
      - workspace_c_deploy:
          requires:
            - workspace_c_hold
